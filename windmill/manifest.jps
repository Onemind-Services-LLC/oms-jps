type: install
id: windmill
name: Windmill
homepage: https://windmill.dev/

categories:
  - apps/dev-and-admin-tools

description:
  text: "/texts/description.md?_r=${fn.random}"
  short: Developer platform for APIs, critical jobs, workflows, data pipelines and UIs.

logo: https://www.windmill.dev/img/windmill.svg
baseUrl: https://raw.githubusercontent.com/Onemind-Services-LLC/oms-jps/master/windmill

onBeforeInit: /scripts/beforeInit.js?_r=${fn.random}
onBeforeInstall: /scripts/beforeInstall.js?_r=${fn.random}

globals:
  dbPassword: ${fn.password}

nodes: definedInOnBeforeInstall

onInstall:
  - addLimits
  - createDb
  - env.control.AddContainerEnvVars[cp]:
      vars:
        BASE_URL: ${env.url}
  - forEach(env.nodes):
      if ("${@i.nodeGroup}".includes("cp")):
        set:
          cpAllNodeIds: ${@i.id}${this.sep:}${this.cpAllNodeIds:}
          sep: ','
  - env.control.ExecDockerRunCmd [${this.cpAllNodeIds}]
  - cmd[${nodes.cp.master.id}]: |-
      retries=0
      max_retries=100
      while [[ "$(curl -s -o /dev/null -w '%{http_code}' http://localhost:${DOCKER_EXPOSED_PORT})" != "200" ]]; do
        sleep 5
        ((retries++))
        if [[ $retries -eq $max_retries ]]; then
          echo "Max retries reached. Exiting."
          break
        fi
      done

  - nginxConfig

actions:
  addLimits:
    - env.control.ApplyNodeGroupData [bl, cp, sqldb]:
        data:
          isRequired: true

  createDb:
    - cmd[${nodes.sqldb.master.id}]: |-
        wget https://raw.githubusercontent.com/windmill-labs/windmill/main/init-db-as-superuser.sql -O /tmp/init-db-as-superuser.sql
        psql -U webadmin -d postgres -f /tmp/init-db-as-superuser.sql
        psql -U webadmin -d postgres -c "CREATE DATABASE windmill;"
        psql -U webadmin -d postgres -c "CREATE USER windmill WITH PASSWORD '${globals.dbPassword}';"
        psql -U webadmin -d postgres -c "GRANT windmill_admin TO windmill;"
        psql -U webadmin -d postgres -c "GRANT windmill_user TO windmill;"
        psql -U webadmin -d postgres -c "ALTER DATABASE windmill OWNER TO windmill;"
        psql -U webadmin -d postgres -c "GRANT CREATE ON SCHEMA public TO windmill;"

  nginxConfig:
    - replaceInFile:
        nodeMission: bl
        path: /etc/nginx/nginx-jelastic.conf
        replacements:
          - pattern: large_client_header_buffers [0-9]* [0-9]*k;
            replacement: large_client_header_buffers 4 64k;

    - cmd[bl]: |-
        wget '${baseUrl}/config/bl-lsp.conf' -O /tmp/bl-lsp.conf
        awk '/location \/ {/ && !done {print; system("cat /tmp/bl-lsp.conf"); done=1; next} 1' /etc/nginx/nginx-jelastic.conf > temp_file && mv temp_file /etc/nginx/nginx-jelastic.conf
      user: root

    - restartContainers:
        nodeGroup: bl

success: /texts/success.md?_r=${fn.random}
